digraph G {
"root.calculator.enter" [ label = "enter", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"dynamic4.add" [ label = "dynamic4.add", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"dynamic3.add" [ label = "dynamic3.add", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"dynamic2.equals" [ label = "dynamic2.equals", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.arg" [ label = "arg", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.equals.s" [ label = "s", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.equals" [ label = "equals", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.acc" [ label = "acc", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"dynamic1.equals" [ label = "dynamic1.equals", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.add.s2" [ label = "s2", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.add.s" [ label = "s", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.add" [ label = "add", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.enter.n" [ label = "n", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator.enter.s" [ label = "s", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root.calculator" [ label = "calculator", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root" [ label = "root", shape = ellipse, style = filled, fillcolor = "#FFFFFF" ];
"root" -> "root.calculator.enter" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root" -> "dynamic4.add" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root" -> "dynamic3.add" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root" -> "dynamic2.equals" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.equals" -> "root.calculator.arg" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.equals" -> "root.calculator.equals.s" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator" -> "root.calculator.equals" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator.add" -> "root.calculator.acc" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.add" -> "root.calculator.equals" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.add" -> "dynamic1.equals" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.add" -> "root.calculator.arg" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.add" -> "root.calculator.add.s2" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator.add" -> "root.calculator.add.s" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator" -> "root.calculator.add" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator.enter" -> "root.calculator.arg" [ style = bold, color = black, penwidth = 1, arrowhead = normal ];
"root.calculator.enter" -> "root.calculator.enter.n" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator.enter" -> "root.calculator.enter.s" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator" -> "root.calculator.enter" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator" -> "root.calculator.acc" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root.calculator" -> "root.calculator.arg" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
"root" -> "root.calculator" [ style = dashed, color = black, penwidth = 1, arrowhead = open ];
}
