<!--
 Targets for working from terminal window:
       build (default) - generates java files and compiles them
       clean           - removes all generated files and class files
 Targets for working from Eclipse:
       gen             - generates java files
       genClean        - removes all generated files and their class files
-->
<project name="Puck" default="gen">

<target name="configurablesettings">
	<property file="ant.settings"/>
</target>
	
<target name="defaultsettings" depends="configurablesettings">
  
  <property name="svn-dir" value="/home/lorilan/puck_svn"/>
  <property name="jrrt-home" value="/${svn-dir}/build"/>
  <!-- <property name="jrrt-home" value="../build" /> -->

  <!-- location of jrrt-read-only -->
  <property name="jrrt-read-only" value="${jrrt-home}/jrrt-read-only"/>
  <!-- location of Java1.4Frontend -->
  <property name="Java1.4Frontend" value="${jrrt-home}/Java1.4Frontend"/>
	<!-- location of Java1.5Frontend -->
	<property name="Java1.5Frontend" value="${jrrt-home}/Java1.5Frontend"/>
  <!-- location of ControlFlowGraph -->
  <property name="ControlFlowGraph" value="${jrrt-home}/ControlFlowGraph"/>

  <property name="base-outdir" value="/home/lorilan/projects/constraintsSolver/scala/javasrc" />
  <!-- <property name="base-outdir" value="." /> -->

  <!-- location of puck -->
  <property name="puck-java" value="${svn-dir}/jrrtEngine"/>

  <property name="puck-scala" value="."/>

  <!-- location of evaluator -->
  <property name="evaluator" value="${svn-dir}/evaluator"/>
  <!-- location of distrib -->
  <property name="distrib" value="${svn-dir}/distrib"/>
  

	<echo message="Java1.4Frontend = ${Java1.4Frontend}, Java1.5Frontend = ${Java1.5Frontend}, ControlFlowGraph = ${ControlFlowGraph}, puck = ${puck-java}, evaluator = ${evaluator}, distrib = ${distrib}"/>
</target>
		
<target name="settings" depends="defaultsettings">
	<!-- location of self -->
	<property name="Refactoring" value="${jrrt-read-only}"/>
	<!-- "package" is the directory where generated files will be stored -->
	<property name="package" value="AST"/>
	<!-- "tools" is the directory where generators and libraries are located. -->
	<property name="tools" value="${Java1.4Frontend}/tools"/>
	<!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
	<taskdef name="jflex" classname="JFlex.anttask.JFlexTask" classpath="${tools}/JFlex.jar"/>
	<!-- "beaver" is an ant task class for the parser generator in beaver.jar -->
	<taskdef name="beaver" classname="beaver.comp.run.AntTask" classpath="${tools}/beaver-ant.jar"/>
	<!-- "jastadd" is an ant task class in jastadd2.jar -->
	<taskdef name="jastadd" classname="jastadd.JastAddTask" classpath="${tools}/jastadd2.jar"/>
	<!-- "lib" is the directory where additional libraries are located -->
  <property name="lib" value="${Refactoring}/lib"/>
  <!-- "libpuck" is the directory where additional puck libraries are located -->
  <property name="libpuck" value="${puck-java}/lib"/>
</target>

<!-- compile sources -->
<!-- <target name="build" depends="gen">
	<mkdir dir="./bin"/>
  <javac debug="true" 
         nowarn="true"
	       compiler="javac1.6"
	       target="1.6"
	       source="1.6"
	       includeAntRuntime="false" 
         destdir="./bin"
         classpath=".:${tools}/beaver-rt.jar:${lib}/junit.jar:${lib}/cream106.jar:${libpuck}/commons-cli-1.2.jar:${libpuck}/commons-io-2.4.jar" >

    <src path="${puck-java}"/>
	  <src path="${Refactoring}"/>
    
    <include name="**/*.java"/>
    <exclude name="puck/tests/**/*.java"/>
	  <exclude name="tests/eclipse/**/*.java"/>
	  <exclude name="tests/RelativesTests/**/*.java"/>
	  <exclude name="tests/jigsaw/*Test.java"/>
  </javac>
</target> -->

<!-- <target name="execjar" depends="build">
    <jar destfile="puck.jar" >
    <fileset dir="./bin">
      <include name="**/*.class"/>
      <exclude name="puck/tests/**/*.class"/>
      <exclude name="tests/eclipse/**/*.class"/>
      <exclude name="tests/RelativesTests/**/*.class"/>
      <exclude name="tests/jigsaw/*Test.class"/>
    </fileset>
    <fileset dir=".." includes="evaluator/**/*.pl"/>
    <restrict>
      <archives>
        <zips>
          <fileset file="${lib}/cream106.jar" />
          <fileset file="${libpuck}/commons-cli-1.2.jar" />
          <fileset file="${libpuck}/commons-io-2.4.jar" />
      	</zips>
      </archives>
    </restrict>

    <manifest>
      <attribute  name="Main-Class"
                  value="puck.Puck"/>
    </manifest>
  </jar>
  <copy file="${puck-java}/puck.jar" todir="${distrib}"/>
</target> -->

<!-- generate compiler source files and compile sources; change
     to scanner1.4 and parser1.4 to build a compiler that accepts Java 1.4 as
     input language -->
<target name="gen" depends="settings,scanner1.5,parser1.5">
  <!-- create AST node types and weave aspect modules -->
  <jastadd package="${package}" rewrite="true" beaver="true" novisitcheck="true" noCacheCycle="true"
  	       outdir="${base-outdir}" debug="false">
		<fileset dir="${Java1.4Frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/> 
			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="${Java1.5Frontend}">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${ControlFlowGraph}">
		    <include name="Nodes.ast"/>
			<include name="ControlFlowGraph.jrag"/>
			<include name="Sets.jrag"/>
			<include name="Exceptions.jrag"/>
			<include name="Alias.jrag"/>
			<include name="ReachingDefinitions.jrag"/>
			<include name="DotGeneration.jrag"/>
		</fileset>
		<fileset dir="${Refactoring}/util">
            <include name="**/*.ast"/>
            <include name="**/*.jrag"/>
            <include name="**/*.jadd"/>
    </fileset>
		<fileset dir="${puck-java}/jrrt_modified_files">
            <include name="**/*.jrag"/>
            <exclude name="Renaming/RenameMethod.jrag"/>
    </fileset>
    <fileset dir="${puck-java}/puck/jrag">
     <!--        <include name="**/*.jrag"/>
            <include name="**/*.jadd"/> -->
            <include name="Desambiguation.jadd"/>
            <!-- <exclude name="CodeComparator.jadd"/>
            <exclude name="MoveOutOfScope.jadd"/>
            <exclude name="TypeId.jadd"/> -->
    </fileset>


    <fileset dir="${Refactoring}">
		  <include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="util/**"/>
      <exclude name="tests/ProgramFactory.jrag"/>
      <exclude name="tests/RTXF.jrag"/>  
      <exclude name="tests/Testing.jrag"/>
			<exclude name="undo/NoUndo.jrag"/>
			<exclude name="AccessibilityConstraints/SolverChoco.jrag"/>
			<exclude name="TypeConstraints/TypeConstraintSolving.jrag"/>
			<exclude name="TypeConstraints/CollectTypeConstraints.jrag"/>
      
      <exclude name="MakeMethodStatic/MakeMethodStatic.jrag"/>
      <exclude name="ChangeMethodSignature/ChangeParameterType.jrag"/>
		</fileset>
  	
    <fileset dir="${puck-scala}/jrag" includes="AccessGraphFactory.jrag"/>
    
    <fileset dir="${Refactoring}">
  		<include name="TypeConstraints/TypeConstraintSolving.jrag"/>
			<include name="TypeConstraints/CollectTypeConstraints.jrag"/>
  	</fileset>

  </jastadd>
  <!-- copy library files-->
  <copy todir="${base-outdir}/beaver" preservelastmodified="true">
    <fileset dir="${Java1.4Frontend}/beaver">
      <include name="**/*.java"/>
    </fileset>
  </copy>
</target>

<target name="scanner1.4">
  <!-- compose the scanner -->
  <concat destfile="${base-outdir}/scanner/JavaScanner.flex" binary="true" force="false">
    <filelist dir="${Refactoring}">
        <file name="util/preamble.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="macros.flex"/>
      <file name="rules_preamble.flex"/>
    </filelist>
    <filelist dir="${Refactoring}">
      <file name="util/WhiteSpace.flex"/>
      <file name="util/Comments.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Keywords.flex"/>
      <file name="Literals.flex"/>
      <file name="Separators.flex"/>
      <file name="Operators.flex"/>
      <file name="Identifiers.flex"/>
      <file name="postamble.flex"/>
    </filelist>
  </concat>
  <!-- generate the scanner -->
  <jflex file="${base-outdir}/scanner/JavaScanner.flex" outdir="${base-outdir}/scanner" nobak="yes"/>
  <copy todir="${base-outdir}/scanner" file="${Java1.4Frontend}/scanner/Unicode.java" preservelastmodified="true"/>
</target>

<target name="scanner1.5">
  <mkdir dir="${base-outdir}/scanner"/>
  <concat destfile="${base-outdir}/scanner/JavaScanner.flex" binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="macros.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15macros.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="rules_preamble.flex"/>
    </filelist>
    <filelist dir="${Refactoring}">
      <file name="util/WhiteSpace.flex"/>
      <file name="util/Comments.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Keywords.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15keywords.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Literals.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15literals.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="Separators.flex"/>
      <file name="Operators.flex"/>
    </filelist>
    <filelist dir="${Java1.5Frontend}">
      <file name="java15operators.flex"/>
      <file name="java15identifiers.flex"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="postamble.flex"/>
    </filelist>
  </concat>
  <jflex file="${base-outdir}/scanner/JavaScanner.flex" outdir="${base-outdir}/scanner" nobak="yes"/>
  <copy todir="${base-outdir}/scanner" file="${Java1.4Frontend}/scanner/Unicode.java" preservelastmodified="true"/>
</target>

<target name="parser1.4">
  <mkdir dir="${base-outdir}/parser"/>
  <!-- generate the parser phase 1, create a full .lalr specification from fragments-->
  <concat destfile="${base-outdir}/parser/JavaParser.all" binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.parser"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}">
      <file name="parser/java14.parser"/>
      <file name="parser/errorrecovery.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
  <java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar" classname="Main" fork="true">
    <arg line="${base-outdir}/parser/JavaParser.all ${base-outdir}/parser/JavaParser.beaver"/>
  </java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${base-outdir}/parser/JavaParser.beaver" terminalNames="yes" compress="yes" useSwitch="yes"/>
</target>

<target name="parser1.5">
  <mkdir dir="${base-outdir}/parser"/>
  <!-- generate the parser phase 1, create a full .lalr specification from fragments-->
  <concat destfile="${base-outdir}/parser/JavaParser.all" 
          binary="true" force="false">
    <filelist dir="${Refactoring}">
      <file name="util/preamble.parser"/>
    </filelist>
    <filelist dir="${Java1.4Frontend}">
      <file name="parser/java14.parser"/>
      <file name="parser/errorrecovery.parser"/>
    </filelist>
    <fileset dir="${Java1.5Frontend}">
      <include name="*.parser"/>
    </fileset>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
  <java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar" classname="Main" fork="true">
    <arg line="${base-outdir}/parser/JavaParser.all ${base-outdir}/parser/JavaParser.beaver"/>
  </java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="${base-outdir}/parser/JavaParser.beaver" terminalNames="yes" compress="yes" useSwitch="yes"/>
</target>

<!-- remove generated source files and .class files -->
<target name="clean" depends="cleanGen">
    <!-- delete all .class files recursively -->
    <delete quiet="true">
      <fileset dir="." includes="**/*.class"/>
      <fileset file="Refactoring.jar"/>
      <fileset file="puck.jar"/>
    </delete>
    <delete dir="bin" quiet="true"/>
</target>

<!-- remove generated source files and .class files -->
<target name="cleanGen" depends="settings">
    <delete dir="${base-outdir}/${package}" quiet="true"/>
    <delete dir="${base-outdir}/beaver" quiet="true" />
    <delete quiet="true">
      <fileset dir="${base-outdir}/scanner" includes="JavaScanner.flex"/>
      <fileset dir="${base-outdir}/scanner" includes="JavaScanner.java"/>
      <fileset dir="${base-outdir}/scanner" includes="Unicode.java"/>
      <fileset dir="${base-outdir}/parser" includes="JavaParser.java"/>
      <fileset dir="${base-outdir}/parser" includes="JavaParser.beaver"/>
      <fileset dir="${base-outdir}/parser" includes="JavaParser.all"/>
      <!--
        <fileset dir="${jrrt-read-only}doc/specifications">
        <exclude name="*.tex"/>
        <exclude name="*.sty"/>
        <exclude name="*.pdf"/>
        </fileset>
      -->
    </delete>
    <delete dir="${base-outdir}/scanner" quiet="true"/>
    <delete dir="${base-outdir}/parser" quiet="true"/>
</target>

</project>

