aspect CreateNode {
    public static ConstructorDecl ConstructorDecl.createConstructor(Modifiers mods, String name){
        return new ConstructorDecl(mods, name,
                new List<ParameterDeclaration>(), new List<Access>(), new Opt(), new Block());
    }

    //scala compiler does not like ASTNode type parameter bound
    public CompilationUnit Program.insertUnusedType(String path, String pkg, TypeDecl td) {
        return insertUnusedType(path, pkg, new List<ImportDecl>(), td);
    }


    public void MethodDecl.makeFactoryOf(ConstructorDecl cdecl){
        List<ParameterDeclaration> params = cdecl.getParameterList().copy();
        List<Expr> args = new List<Expr>();
        for(int i =0; i< params.getNumChild(); i++)
            args.add(params.getChild(i).createLockedAccess());

        this.setParameterList(params);
        this.setBlock(new Block(new ReturnStmt( new ClassInstanceExpr(cdecl.hostType().createLockedAccess(), args))));
    }

    eq DummyConstructorCall.type() = getTypeDecl();
    public void DummyConstructorCall.prettyPrint(PrettyPrinter out){
        out.print("/* DummyConstructorCall */");
    }
//    private TypeDecl DummyConstructorCall.typeDecl;
       //        public DummyConstructorCall(TypeDecl typeDecl){
//            this.typeDecl = typeDecl;
//        }
//        DummyConstructorCall
//    class DummyConstructorCall extends Expr{
//
//        private TypeDecl typeDecl;
//        public DummyConstructorCall(TypeDecl typeDecl){
//            this.typeDecl = typeDecl;
//        }
//
//        public void toString(StringBuffer s){
//            s.append("/* DummyConstructorCall */");
//        }
//
//        @Override
//        public TypeDecl type() {
//            return typeDecl;
//        }
//
//        @Override
//        public int precedence() {
//            throw new Error("DummyConstructorCall has no precedence");
//        }
//
//        public DummyConstructorCall treeCopy(){
//            return treeCopyNoTransform();
//        }
//
//        public DummyConstructorCall treeCopyNoTransform(){
//            TypeDecl td = typeDecl.treeCopy();
//            return new DummyConstructorCall(td);
//        }
//
//        public DummyConstructorCall fullCopy(){
//            return treeCopyNoTransform();
//        }
//
//    }

    public void MethodAccess.prependArg(Expr e){
        getArgList().insertChild(e, 0);
    }
    public void ConstructorAccess.prependArg(Expr e){
        getArgList().insertChild(e, 0);
    }

    public void MethodDecl.prependParameter(ParameterDeclaration pdecl) {
        getParameterList().insertChild(pdecl, 0);
    }
    public void ConstructorDecl.prependParameter(ParameterDeclaration pdecl) {
        getParameterList().insertChild(pdecl, 0);
    }


}